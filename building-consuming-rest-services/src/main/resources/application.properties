spring.datasource.url=jdbc:postgresql://localhost:5432/springdb
spring.datasource.username=springuser
spring.datasource.password=springpass
spring.datasource.driver-class-name=org.postgresql.Driver

# PLEASE DONT USE THOSE TWO IN PROD ENV BECAUSE IT WILL AFFECT THE PERFORMANCE OF THE WEB APPLICATION
# print the query in the console/logs
spring.jpa.show-sql=true
# print the queries in a readble friendly style
spring.jpa.properties.hibernate.format_sql=true

# to disable the javax bean validations
# to not make validation two times: before fill the form and after fill the form when saving for example
spring.jpa.properties.javax.persistence.validation.mode=none

# change the default path of spring data rest
spring.data.rest.base-path=/anchtun-api

# PLEASE NOTE THAT THOSE TWO CONFIGURATION ARE NOT RECOMMENDED ON PRODUCTION BECAUSE YOU CAN ONLY CONTROL
# THE LOG STATEMENTS INSIDE THE FRAMEWORK BUT NOT THE LOG STATEMENT INSIDE YOUR CUSTUM PACKAGES OR INSIDE 
# THE CLASS THAT YOU WROTE DURING THE DEVELOPMENT OF YOUR WEB APPLICATION
# will print all log statement with severity type: error/warn/info/debug
#debug=true

# will print all log statement with severity type: error/warn/info/debug/trace
# to see how framework is working: log each and every details
#trace=true

# tell spring boot: Please construct this severity category for all classes and log statement that are available
# inside the libraries
#logging.level.root=INFO

# If we want to apply logging severity to a particular class inside pacticular package
# in this case will print only ERROR
# if we change to: logging.level.com.anchtun.aspects=WARN will print: ERROR/WARN
# if we change to: logging.level.com.anchtun.aspects=INFO will print: ERROR/WARN/INFO
# if we change to: logging.level.com.anchtun.aspects=DEBUG will print: ERROR/WARN/INFO/DEBUG
# if we change to: logging.level.com.anchtun.aspects=TRACE will print: ERROR/WARN/INFO/DEBUG/TRACE
logging.level.com.anchtun.aspects=ERROR
#logging.level.com.anchtun.controller=TRACE

# we can also make group
logging.group.anchtun_app_info=com.anchtun.controller,com.anchtun.service
logging.level.anchtun_app_info=INFO

# For color output
#spring.output.ansi.enabled=ALWAYS

# we get those values using @Value annotation, please login and see th console to check
# the @Value annotation was added in HomeController
# you can write anything and Spring will understand it
anchtun.app.pagesize.default=3
anchtun.app.message.success=Saved successfully
# Environment interface was added in HomeController
anchtun.app.message.error=Error was occured




